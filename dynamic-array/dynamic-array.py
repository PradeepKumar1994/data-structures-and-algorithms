"""@date: 3/25/2021@author: pradeep"""class DynamicArray:    MAX = 1        def __init__(self):        self.queue = []        self.count = 0        def resize(self):        if(len(self.queue) == 1):            DynamicArray.MAX = 1            DynamicArray.MAX = DynamicArray.MAX**2        elif(self.count % 2 == 0 and len > 0):            DynamicArray.MAX = self.count - 1        temp = self.queue        self.queue = [0] * DynamicArray.MAX        print('------------> DynamicArray.Max: {} - self.queue: {}'.format(DynamicArray.MAX, self.queue))        try:            for i in range(len(temp)):                                self.queue[i] = temp[i]            print('After resizing: ', self.queue)        except IndexError:            print('Index Error occured, value of i {} reason being the length of temp array: {} while length of array: {}'.format(i, len(temp), len(self.queue)))            print('Contents of temp array: {} \n Contents of dynamic array: {}'.format(temp, self.queue))            print(self.queue)    def printall(self):        print(self.queue)    def details(self):        print("Size of the array is: ",DynamicArray.MAX)        print("Number of elements inserted: ", self.count)        self.printall()    def insertion(self, position = None):        value = input('Value entered: ')            print('Before resizing: ',DynamicArray.MAX)        if(len(self.queue) == self.count):            print('Length of count and length of array equal')                self.queue.append(value)                        self.resize()            print(self.queue)                            print('\n')                        elif(len(self.queue)> self.count):            self.queue.insert(self.count+1, value)        self.count = self.count + 1        '''        Queue_data_struct = []        for i in range(len(self.queue)):            if(i == position):                Queue_data_struct.append(self.queue[i])                self.queue[i] = value            elif(i > position and i < len(self.queue)):                Queue_data_struct.append(self.queue[i])                        self.queue[i] = Queue_data_struct.pop(0)            elif(i > len(self.queue)):                self.queue.append(Queue_data_struct[i])                        else:        '''    def deletion(self, position = None):        if(position == 'n'):            pass        if(self.count == 0):            print('No elements in the array')        if(self.count == 1):                        self.queue[0] = 0            self.queue = self.queue[:-1]            self.count = self.count - 1            #DynamicArray.MAX = DynamicArray.MAX - 1         elif(self.count > 1):                        #self.queue = self.queue[i+1:]            print(self.queue[1:])            self.queue = self.queue[1:]            self.count = self.count - 1            #DynamicArray.MAX = DynamicArray.MAX - 1            print('Decreased the size by one \n', len(self.queue))            print('Count: ', self.count)        print(self.queue)da_array = DynamicArray()loop = Truewhile(loop):    print("[1] - Insertion")    print("[2] - deletion")    print("[3] - print all element")    print("[4] - details ")    print("[5] - details \n")    try:        decision = int(input('Enter your decision: '))        if(decision == 1):            da_array.insertion()            print("Value entered")        elif(decision == 2):            da_array.deletion()            #position_decision = input('Would you like to enter the position: [y/n]: ')        elif(decision == 3):            da_array.printall()    except ValueError:        print('Invalid input. Please try again')        da_array.details()    